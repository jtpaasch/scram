(** Builds an AST of {!Node}s from {!Token}s. *)

(** Raised if an invalid token is encountered. *)
exception InvalidToken of string

(** Takes a list of tokens (generated by {!Lexer.tokenize}) and an
    accumulator, and constructs an AST of nodes. *)
val build : Token.t list -> Node.t list -> Node.t list
(** For example, if [tokens] is a list of tokens returned by
    {!Lexer.tokenize}, construct an AST from it by calling
    [let nodes = build tokens []]. *)
